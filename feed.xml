<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Premsai blogs</title>
    <description>Software Developer</description>
    <link>http://sajjapremsai.github.io/blogs/</link>
    <atom:link href="http://sajjapremsai.github.io/blogs/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 26 Jun 2025 19:39:56 +0000</pubDate>
    <lastBuildDate>Thu, 26 Jun 2025 19:39:56 +0000</lastBuildDate>
    <generator>Jekyll v4.3.4</generator>
    
      <item>
        <title>CSRF (Cross-Site Request Forgery)</title>
        <description>&lt;h1 id=&quot;Ô∏è-understanding-csrf-attacks-cross-site-request-forgery&quot;&gt;‚öñÔ∏è Understanding CSRF Attacks: Cross-Site Request Forgery&lt;/h1&gt;

&lt;h2 id=&quot;-what-is-a-csrf-attack&quot;&gt;üîí What is a CSRF Attack?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CSRF (Cross-Site Request Forgery)&lt;/strong&gt; is a type of web security vulnerability that allows an attacker to trick a logged-in user into unknowingly submitting malicious requests to a web application where they are authenticated.&lt;/p&gt;

&lt;p&gt;When a user logs into a website, they often receive authentication tokens (such as JWT tokens), which are stored in the browser (typically as cookies). These tokens enable persistent sessions without requiring the user to log in repeatedly.&lt;/p&gt;

&lt;p&gt;However, if the user clicks on a &lt;strong&gt;malicious link&lt;/strong&gt; or visits a malicious website, the attacker can craft a hidden form or script that sends an unauthorized request to the original website. Since the user‚Äôs browser includes the stored authentication token, the server treats the request as legitimate.&lt;/p&gt;

&lt;p&gt;The scary part? The user has &lt;strong&gt;no idea&lt;/strong&gt; this action took place.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-example-of-a-csrf-attack&quot;&gt;üß™ Example of a CSRF Attack&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say there‚Äôs a trusted and widely-used website:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://popularwebsite.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To keep users logged in, the site stores JWT tokens in the browser cookies.&lt;/p&gt;

&lt;p&gt;Now suppose there‚Äôs a sensitive endpoint on this site:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST https://popularwebsite.com/user/update-email
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An attacker creates a malicious webpage like the one below:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onload=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document.forms[0].submit()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;You&apos;ve won a prize! üòà&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://popularwebsite.com/user/update-email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hacker@example.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the user is &lt;strong&gt;logged in&lt;/strong&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;popularwebsite.com&lt;/code&gt; and visits this page, their browser will automatically include the JWT token stored in the cookie. As a result, the server will accept the request and update the user‚Äôs email address without their knowledge.&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 26 Jun 2025 14:30:00 +0000</pubDate>
        <link>http://sajjapremsai.github.io/blogs/2025/06/26/csrf-attacks/</link>
        <guid isPermaLink="true">http://sajjapremsai.github.io/blogs/2025/06/26/csrf-attacks/</guid>
        
        
      </item>
    
  </channel>
</rss>
